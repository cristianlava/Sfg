{"version":3,"sources":["components/DNDCard.js","components/DND.js","components/Youtube.js","components/Videos.js","myVids.js","containers/SFGmain.js","containers/Nav.js","App.js","serviceWorker.js","index.js","logo.svg","images/phoenix.png"],"names":["DNDCard","react_default","a","createElement","src","require","DND","id","components_DNDCard","React","Component","Youtube","props","className","style","position","paddingBottom","paddingTop","height","top","left","width","link","frameBorder","Videos","Container","this","vid","date","href","name","paragraph","components_Youtube","embeddedVid","myVids","img","SFGMain","vids","map","components_Videos","onClick","handleBtn","clicked","components_DND","Nav","target","react_fontawesome_index_es","icon","class","library","add","fab","App","state","_this","setState","containers_Nav","SFGmain","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a4d61ae7.chunk.js","sourcesContent":["import React from 'react'\nconst DNDCard = () => {\n  return (\n    <div>\n      <h1>DnD!</h1>\n      <h3>Order of the Phoenix!</h3>\n      <p> The finale is currently scheduled for April 27-28! Please bring ($20) its for supplies.</p>\n      <img src={require('../../src/images/phoenix.png')} />\n      <p>The game is coming to an end! This can is both a very proud and happy moment for me, as well as a sad one. This game has span almost a full year, which is hard to believe.Its awesome you guys stuck it out and are around to finish the fight!</p>\n      <p>The original lineup (Alyzara, Biron, Crow and Daystrom) started off doing things in the city of Frostheim. They got up to all sorts of whacky events including breaking and entering into a prison. Not too far after\n\t\t\tthe character Raymond merged back into the land of the living and joined the group! The party then went on a series of adventures that would lead to the ground finding the Deck of Many Things! What they didn't expect was to draw 2 Comet cards (Alyzara) and for Raymond to draw Balance! Raymond then went on \n\t\t\ta series of massacres with the wild card Crow. After revealing his true intentions he has become the biggest known threat to the world! The group at their lowest point met a paladin of Bahamut, named Xandar! Having a common interest in a third party Xandar joined the party\n\t\t\tand now wants to bring Raymond back from the brink of madness and cruelty. This is truly the Order of the Phoenix's darkest hour!</p>\n    </div>\n  )\n}\n\nexport default DNDCard\n","import React from 'react'\nimport DNDCard from '../components/DNDCard'\nclass DND extends React.Component {\n  render () {\n    return (\n      <div id='wrapper'>\n        <DNDCard />\n      </div>\n    )\n  }\n}\n\nexport default DND\n","import React from 'react'\n\nconst Youtube = (props) => {\n  return (\n    <div\n      className=\"video\"\n      style={{\n        position: \"relative\",\n        paddingBottom: \"25%\" /* 16:9 */,\n        paddingTop: 25,\n        height: 0\n      }}\n    >\n      <iframe\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: 560,\n          height: 315\n        }}\n        src={props.link}\n        frameBorder=\"0\"\n      />\n    </div>\n  );\n};\n\nexport default Youtube","import React from 'react'\nimport Youtube from './Youtube'\nimport { Container } from 'semantic-ui-react'\nclass Videos extends React.Component {\n  render () {\n    return (\n      <div className='video'>\n        <Container>\n          <article className='vids'>\n            <span className='date'>{this.props.vid.date}</span>\n            <h2><a href='#'>{this.props.vid.name}</a></h2>\n            <p>{this.props.vid.paragraph}</p>\n            <Youtube link={this.props.vid.embeddedVid} />\n          </article>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Videos\n","const myVids = [\n  {\n    name: 'Video Games W/ Friends #15',\n    date: 'February, 23 2019',\n    paragraph: 'Play of the Century',\n    embeddedVid: 'https://www.youtube.com/embed/Ai8LgKyg16A',\n    img: 'https://i.ytimg.com/vi/Ai8LgKyg16A/hqdefault.jpg?sqp=-oaymwEZCNACELwBSFXyq4qpAwsIARUAAIxCGAFwAQ==&rs=AOn4CLB_s7gT6cVl_Wmym63k_KGifTYxPA'\n  },\n  {\n    name: 'Video Games W/ Friends #14',\n    date: 'October 2, 2017',\n    paragraph: 'Donald Frost\\'s Blazing Challenge',\n    embeddedVid: 'https://www.youtube.com/embed/YBobAZkR1QU'\n\n  },\n  {\n    name: 'Video Games W/ Friends #13',\n    date: 'April 23, 2017',\n    paragraph: 'The Two Finger Method',\n    embeddedVid: 'https://www.youtube.com/embed/9yhJkfUuDK0',\n    img: ''\n  },\n  {\n    name: 'Video Games W/ Friends #12',\n    date: 'October 4, 2016',\n    paragraph: 'The Lost cause',\n    embeddedVid: 'https://www.youtube.com/embed/ov2MdfJA6VY'\n  },\n  {\n    name: 'Video Games W/ Friends #11',\n    date: 'August 11, 2015',\n    paragraph: 'I\\'m fraggin\\' you in!',\n    embeddedVid: 'https://www.youtube.com/embed/kly2WGB2NCA'\n  }\n]\n\nexport default myVids\n","import React from 'react'\nimport App from '../App'\nimport DND from '../components/DND'\nimport Videos from '../components/Videos'\nimport myVids from '../myVids'\nclass SFGMain extends React.Component {\n  vids = () => myVids.map(vid => {\n    return <Videos vid={vid} />\n  })\n\n  render () {\n    return (\n      <div>\n        <button onClick={this.props.handleBtn} >{this.props.clicked ? 'Videos' : 'DND'}</button>\n        {this.props.clicked ? this.vids() : <DND />}\n      </div>\n    )\n  }\n}\n\nexport default SFGMain;","import React from 'react'\nimport DND from '../components/DND'\nimport Videos from '../components/Videos'\nimport { Button, Icon } from 'semantic-ui-react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport '../css/nav.scss'\nclass Nav extends React.Component {\n  render () {\n    return (\n      <div>\n        <nav className='ui three item menu'>\n          <a className='active item' href='https://www.youtube.com/user/shadowfrostgaming' target='_blank' ><FontAwesomeIcon icon={['fab', 'youtube']} /></a>\n          <a className='item' href='https://twitter.com/ShadowFrostG' target='_blank' class='icon fa-twitter' ><FontAwesomeIcon icon={['fab', 'twitter']} /> </a>\n          <a className='item' href='https://twitch.tv/shadowfrostgaming' target='_blank' class='icon fa-twitch'><FontAwesomeIcon icon={['fab', 'twitch']} /></a>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default Nav\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport SFGMain from './containers/SFGmain'\nimport Nav from './containers/Nav'\nimport './App.css'\n\nlibrary.add(fab)\nclass App extends Component {\n\n  state = {\n    clicked: true\n  }\n\n  handleBtn = () => {\n    this.setState({\n      clicked: !this.state.clicked\n    })\n  }\n  render() {\n    return (\n      <div>\n        <Nav clicked={this.state.clicked} />\n        <SFGMain handleBtn={this.handleBtn} clicked={this.state.clicked} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/phoenix.9abb6922.png\";"],"sourceRoot":""}